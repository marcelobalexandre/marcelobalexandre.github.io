<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Marcelo Alexandre]]></title>
  <link href="http://www.marcelobalexandre.com/atom.xml" rel="self"/>
  <link href="http://www.marcelobalexandre.com/"/>
  <updated>2014-09-09T22:05:08-03:00</updated>
  <id>http://www.marcelobalexandre.com/</id>
  <author>
    <name><![CDATA[Marcelo Alexandre]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Dicas Sobre Integração Contínua Com .NET E Jenkins]]></title>
    <link href="http://www.marcelobalexandre.com/blog/2014/09/07/dicas-sobre-integracao-continua-com-net-e-jenkins/"/>
    <updated>2014-09-07T16:10:00-03:00</updated>
    <id>http://www.marcelobalexandre.com/blog/2014/09/07/dicas-sobre-integracao-continua-com-net-e-jenkins</id>
    <content type="html"><![CDATA[<p>No momento em que escrevo este post estou trabalhando em uma aplicação <em>desktop</em> para Windows desenvolvida na plataforma .NET. Com a primeira versão que será entregue para os usuários finais quase pronta, nossa equipe sentiu necessidade de colocar em prática o processo de Integração Contínua. Para atingir tal objetivo precisaríamos configurar uma ferramenta que nos auxiliasse a automatizar esse processo, e para isso escolhemos um servidor de Integração Contínua chamado <a href="http://jenkins-ci.org/" target="_blank">Jenkins</a>.</p>

<p>Não tenho a intenção de me aprofundar muito nos processos relacionados a Integração Contínua neste post, a ideia é documentar algumas dicas que encontrei durante a configuração do Jenkins para o nosso cenário atual. Espero que possa ser útil para mais pessoas, boa leitura. ;)</p>

<!--more-->


<h1>WTF is Continuous Integration?</h1>

<p>Basicamente, Integração Contínua ou Continuous Integration<em> (CI) é uma prática de desenvolvimento de software considerada por muitos um dos pilares das metodologias ágeis. Ela permite que a equipe encontre e elimine problemas rapidamente, agilizando os processos de </em>build<em> e </em>delivery_, melhorando as respostas à falhas e aumentando a qualidade do software.</p>

<p>De maneira simplificada, um processo de integração continua deve monitorar as mudanças de código no seu repositório de controle de versão e realizar os passos necessários para gerar um executável entregável para o cliente. O que normalmente consiste em compilar a aplicação em modo <em>Release</em>, rodar os testes e gerar o executável.</p>

<p>Apesar de no nosso caso termos implementado um processo de Integração Contínua automatizado em um estágio um pouco mais avançado do ciclo de vida do projeto, é muito recomendável adotar essa prática já no início do desenvolvimento, obtendo assim os benefícios da Integração Contínua o mais rápido possível.</p>

<h1>The Jenkins</h1>

<p>O Jenkins é um servidor de Integração Contínua <em>open source</em>, multiplataforma e que pode ser utilizado para automatizar os processos de <em>build</em> e <em>delivery</em> de muitas linguagens, como C#, Ruby, PHP, Java, dentre outras. Um dos pontos principais do Jenkins são os seus inúmeros <em>plugins</em>, que estendem suas funcionalidades e podem ser desenvolvidos por qualquer um. Além disso, seu processo de instalação e configuração é relativamente simples.</p>

<h1>Qual processo queríamos automatizar?</h1>

<p>Como citado anteriormente, estou trabalhando em uma aplicação <em>desktop</em> para Windows desenvolvida na plataforma .NET, o processo de integração que precisávamos automatizar consistia basicamente nos seguintes passos:</p>

<ol>
<li>Rebuild da aplicação em <em>Release</em>.</li>
<li>Execução do processo de <em>Code Analysis</em>.</li>
<li>Execução dos testes unitários.</li>
<li>Criação dos <em>setups</em>.</li>
</ol>


<h1>Preparação do ambiente</h1>

<p>A instalação do Jenkins no Windows é bem simples, basta baixar o instalador no <a href="http://jenkins-ci.org/" target="_blank">site oficial</a>, executar o mesmo e seguir o passo a passo. Ao final do processo o Jenkins estará instalado como um serviço e será executado automaticamente na inicialização do Windows. Para verificar se tudo ocorreu corretamente acesse o endereço <a href="http://localhost:8080/" target="_blank">localhost:8080</a> e veja se o Jenkins está rodando.</p>

<p>Uma dica importante para evitar dores de cabeça é forçar o serviço do Jenkins a ser executado com um usuário administrador do Windows ao invés de <em>Local System</em> que é o padrão. No meu caso específico o Inno Setup não funcionou corretamente como <em>Local System</em>, para evitar esse tipo de problema execute os seguintes passos:</p>

<ol>
<li>Abra o <strong>Services</strong> do Windows.</li>
<li>Abra as propriedades do serviço do <strong>Jenkins</strong>.</li>
<li>Clique na aba <strong>Log On</strong>.</li>
<li>Marque a opção <strong>This account</strong>.</li>
<li>Selecione um usuário administrador e digite a senha.</li>
<li>Clique em <strong>OK</strong> e reinicie o serviço.</li>
</ol>


<p><img src="http://www.marcelobalexandre.com/images/dicas-sobre-integracao-continua-com-net-e-jenkins/jenkins-service.png"></p>

<p>Além do Jenkins você precisará que todos os <em>softwares</em> necessários para seus processos estejam instalados, como por exemplo o MSBuild, o NUnit, o Inno Setup, etc. Como esses <em>softwares</em> são normalmente executados pelo Jenkins através do Command Prompt do Windows é interessante adicioná-los as variáveis de ambiente para que não seja necessário passar o caminho completo do executável, para isso siga os seguintes passos:</p>

<ol>
<li>Abra o <strong>System Properties</strong> do Windows.</li>
<li>Clique na aba <strong>Advanced</strong>.</li>
<li>Clique no botão <strong>Environment Variables</strong>.</li>
<li>Em <strong>System Variables</strong> selecione a variável <strong>Path</strong>.</li>
<li>Clique em <strong>Edit</strong> e ao final da linha adicione os caminhos dos diretórios dos executáveis separados por ponto e vírgula.</li>
</ol>


<p><img src="http://www.marcelobalexandre.com/images/dicas-sobre-integracao-continua-com-net-e-jenkins/environment-variables.png"></p>

<h1>Estendendo o Jenkins</h1>

<p>Antes de criarmos nosso primeiro <em>job</em> podemos instalar alguns <em>plugins</em> interessantes, para isso acesse o endereço <a href="http://localhost:8080/pluginManager/" target="_blank">localhost:8080/pluginManager</a> do Jenkins, esta página é bem simples e intuitiva, para instalar novos <em>plugins</em> vá para a aba <strong>Available</strong>, para removê-los vá para a aba <strong>Installed</strong> e para atualizá-los vá para a aba <strong>Updates</strong>.</p>

<p><img src="http://www.marcelobalexandre.com/images/dicas-sobre-integracao-continua-com-net-e-jenkins/jenkins-manage-plugins.png"></p>

<p>Logo abaixo segue uma lista de alguns dos <em>plugins</em> que achei interessante e que utilizamos para esse nosso projeto. Existem centenas de outros <em>plugins</em>, fique a vontade para procurar novos.</p>

<ul>
<li><strong>BitBucket Plugin</strong> - Permite acessar um repositório no BitBucket e configurar para um <em>job) ser iniciado quando um </em>Push_ for realizado no repositório.</li>
<li><strong>MSBuild</strong> - Permite realizar o <em>build</em> de <em>projects</em> e <em>solutions</em> do Visual Studio.</li>
<li><strong>NUnit</strong> - Permite que o Jenkins utilize os relatórios gerados pelo NUnit.</li>
<li><strong>Disk Usage Plugin</strong> - Exibe estatísticas sobre o uso do disco.</li>
<li><strong>Timestamper</strong> - Adiciona o horário antes de cada linha do console do Jenkins, bastante útil para medir o tempo de realização de cada tarefa.</li>
<li><strong>Google Cloud Messaging Notification Plugin</strong> - Envia notificações para <em>smartphones</em> Android.</li>
<li><strong>Safe Restart Plugin</strong> - Permite realizar o <em>restart</em> do Jenkins de maneira segura.</li>
</ul>


<h1>Segurança</h1>

<p>Uma dica que considero importante, principalmente se você vai permitir acesso externo ao seu servidor Jenkins, é desativar a funcionalidade de <em>Sign up</em> e controlar as permissões dos usuários, para isso siga os seguintes passos:</p>

<ol>
<li>Acesse o endereço <a href="http://localhost:8080/configureSecurity/" target="_blank">localhost:8080/configureSecurity</a>.</li>
<li>Marque a opção <strong>Enable security</strong>.</li>
<li>Em <strong>Security Realm</strong> selecione a opção <strong>Jenkins’ own user database</strong> e desmarque a opção <strong>Allow users to sign up</strong>.</li>
<li>Em <strong>Authorization</strong> selecione a opção <strong>Matrix-based security</strong>, adicione os usuários e marque as opções que deseja que o usuário tenha permissão.</li>
</ol>


<p><img src="http://www.marcelobalexandre.com/images/dicas-sobre-integracao-continua-com-net-e-jenkins/jenkins-security.png"></p>

<p>Como desativamos a permissão de <em>Sign up</em> você precisará criar as contas dos usuários, para isso acesse o endereço <a href="http://localhost:8080/securityRealm/" target="_blank">localhost:8080/securityRealm</a>. Um detalhe importante aqui é que o <strong>Username</strong> deve ser o mesmo que foi adicionado no passo anterior para que as permissões funcionem corretamente.</p>

<h1>Configurações</h1>

<p>As configurações do Jenkins podem ser acessadas através do endereço <a href="http://localhost:8080/configure/" target="_blank">localhost:8080/configure</a>, dentre outras coisas, aqui você pode configurar o servidor SMTP de envio de e-mail, o local onde seu Git está instalado (que normalmente é reconhecido automaticamente), as configurações para o Google  Cloud Messaging Notification, etc.</p>

<h1>Criando seu primeiro job</h1>

<p>Para criar um novo <em>job</em> no Jenkins, acesse o endereço <a href="http://localhost:8080/newJob" target="_blank">localhost:8080/newJob</a>, digite um nome para o <em>job</em>, marque a opção <strong>Freestyle project</strong> e clique em <strong>OK</strong>. Você será levado para a página de configuração do seu <em>job</em> recém criado, está página é muito importante pois é aqui que devemos configurar tudo que o nosso <em>job</em> irá realizar.</p>

<h2>Custom workspace</h2>

<p>A primeira dica aqui é alterar o <em>workspace</em> onde o <em>job</em> será realizado, por padrão ele fica dentro do diretório onde o Jenkins foi instalado, que normalmente é em <code>C:\Program Files (x86)\Jenkins</code>, o que pode desencadear alguns erros relacionados a permissão de escrita se algum dos <em>softwares</em> utilizados pelo seu job tentar criar algum arquivo em disco. Para alterar a <em>workspace</em> clique no botão <strong>Advanced</strong> em  <strong>Advanced Project Options</strong>, marque a opção <strong>Use custom workspace</strong> e informe o caminho do diretório, por exemplo: <code>C:\CI\my-job\workspace</code>.</p>

<h2>Git e BitBucket</h2>

<p>Caso tenha instalado o <em>plugin</em> do BitBucket (e consequentemente o do Git), em <strong>Source Code Managment</strong> selecione a opção <strong>Git</strong> e configure seu repositório, sua <em>branch</em> e suas credenciais de acesso. Um dica importante aqui é alterar o <em>timeout</em> de <em>clone</em> e <em>fetch</em> do Git, o padrão é de apenas 10 minutos, o que pode não ser suficiente dependendo do tamanho do seu repositório  e da velocidade de sua conexão. Até descobrir isso perdi alguns minutos, para você não passar por isso também, clique no botão <strong>Add</strong>, escolha a opção <strong>Advanced Clone Behaviors</strong> e informe um tempo que ache razoável para o <em>timeout</em>.</p>

<p>Com o <em>plugin</em> do BitBucket você pode configurar para que seu job ser iniciado assim que um push no repositório seja feito, para isso marque a opção <strong>Build when change is pushed to BitBucket</strong>. Para essa opção funcionar você precisará adicionar um <em>Hook</em> de <em>POST</em> apontando para <a href="http://seu-ip-publico:8080/bitbucket-hook/" target="_blank">seu-ip-publico:8080/bitbucket-hook</a> nas configurações do seu repositório no BitBucket.</p>

<h2>MSBuild</h2>

<p>Para configurar o <em>build</em> do seu projeto no MSBuild clique em <strong>Add build step</strong> e na opção <strong>Build a Visual Studio project or solution using MSBuild</strong>. Em <strong>MSBuild Build File</strong> informe o caminho da <em>solution</em> no <em>workspace</em> do <em>job</em>, por exemplo: <code>C:\CI\my-job\workspace\MyProject.sln</code>. Em <strong>Command Line Arguments</strong> você deverá informar os parâmetros do seu <em>build</em>, por exemplo: <code>/t:Rebuild /p:Configuration="Release" /p:Platform=x86 /p:DevEnvDir="C:\Program Files (x86)\Microsoft Visual Studio 12.0\Common7\IDE"</code>. O parâmetro <code>DevEnvDir</code> é importante, ele é utilizado para algumas coisas durante o processo de <em>build</em>, como por exemplo na execução do <em>Code Analisys</em>. Clicando em <strong>Advanced</strong> você também pode marcar a opção <strong>If warning set the build to Unstable</strong>.</p>

<h2>NUnit</h2>

<p>Os testes do NUnit serão executados através do Console, para configurá-lo clique em <strong>Add build step</strong> e na opção <strong>Execute Windows batch command</strong>, no campo <strong>Command</strong> você deverá informar o nome do executável do NUnit (ou o caminho completo caso não o tenha adicionado nas variáveis de ambiente do Windows), o caminho do teste no <em>workspace</em> e o nome do arquivo XML onde será salvo o relatório com os resultados dos testes. Por exemplo: <code>"nunit-console-x86.exe" "MyTest\bin\x86\Release\MyTest.dll" /xml=MyTest.dll-nunit-result.xml</code>.</p>

<p>Para que o Jenkins exiba os resultados dos testes clique em <strong>Add post-build action</strong> e na opção <strong>Publish NUnit test result report</strong> e em <strong>Test report XMLs</strong> e informe <code>*nunit-result.xml</code>.</p>

<h2>Inno Setup</h2>

<p>Para gerar os executáveis utilizando o Inno Setup clique novamente em <strong>Add build step</strong> e na opção <strong>Execute Windows batch command</strong>, no campo <strong>Command</strong> informe o nome do executável do Inno Setup (ou o caminho completo caso não o tenha adicionado nas variáveis de ambiente do Windows) e o caminho do seu <em>script</em> no <em>workspace</em>. Por exemplo: <code>"Compil32.exe" /cc "setup.iss"</code>.</p>

<h1>Finalizando</h1>

<p>Como comentei no início do <em>post</em>, não pretendia me aprofundar nos conceitos relacionados a Integração Contínua e sim compartilhar algumas dicas que acredito serem úteis. A intenção também não era ser nenhuma receita de bolo, adapte o que for necessário para a realidade do seu projeto, o Jenkins é uma ferramenta muito poderosa, explore seus recursos.</p>

<p>Espero que tenha gostado do <em>post</em>, por favor deixe críticas, dúvidas ou sugestões nos comentários.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Como Um Tomate Pode Melhorar Sua Produtividade?]]></title>
    <link href="http://www.marcelobalexandre.com/blog/2014/02/16/como-um-tomate-pode-melhorar-sua-produtividade/"/>
    <updated>2014-02-16T23:45:00-03:00</updated>
    <id>http://www.marcelobalexandre.com/blog/2014/02/16/como-um-tomate-pode-melhorar-sua-produtividade</id>
    <content type="html"><![CDATA[<p>Como programador algumas das minhas preocupações estão relacionadas a produtividade e a eficiência. Em certos momentos eu me pergunto: <em>como posso fazer mais em menos tempo e com a melhor qualidade possível?</em> Em busca de uma resposta para essa pergunta me deparei com uma técnica que venho tentando aplicar no meu dia a dia, e gostaria de compartilhar minhas opiniões sobre ela com vocês.</p>

<!--more-->


<h1>O tomate “mágico”</h1>

<p>Na década de 80 um estudante italiano chamado Francesco Cirillo estava tendo alguns problemas no tempo em que passava com os livros em sua universidade. Mas o que talvez nem mesmo ele imaginasse era que um utensilio doméstico poderia mudar isso. Olhando para um <em>timer</em> de cozinha em formato de tomate ele teve uma ideia e resolveu colocá-la a prova durante seus estudos.</p>

<p>Essa ideia acabou se tornando uma técnica de gerenciamento de tempo bastante conhecida hoje como <a href="http://pomodorotechnique.com/"><em>Pomodoro Technique</em></a> ou apenas <em>Pomodoro</em>, que consiste em alguns hábitos simples que prometem melhorar sua produtividade.</p>

<h1>Mantenha uma lista de tarefas</h1>

<p>Um dos hábitos incentivados pelo <em>Pomodoro</em> é o de manter uma lista de tarefas organizada por prioridade. O “truque” da lista de tarefas é que ela libera “processamento” do seu cérebro para melhor realizar as tarefas, ao invés de ficar tentando memorizar tudo que você precisa fazer.</p>

<p>A técnica recomenda que você use as ferramentas mais simples possíveis para manter sua lista, ou seja, papel e caneta. Mas eu particularmente gosto de utilizar um software chamado <a href="https://www.wunderlist.com/en/"><em>Wunderlist</em></a>. Fique a vontade para utilizar a ferramenta que funcione melhor para você.</p>

<h1>Trabalhando duro mas sem sobrecarga</h1>

<p>Outro hábito que a técnica tenta melhorar está relacionado a não nos sobrecarregarmos. Nosso cérebro normalmente perde eficiência ao realizar uma mesma tarefa por longos períodos de tempo. Quem nunca teve um <em>aha moment</em> quando fez uma pausa para ir ao banheiro após um longo período tentando resolver um problema? Seu cérebro só precisava de uma pausa para achar a melhor solução. Para evitar essa sobrecarga o <em>Pomodoro</em> incentiva o gerenciamento do tempo de maneira que você alterne entre trabalhar duro em uma tarefa e relaxar o cérebro antes de exigi-lo novamente.</p>

<p>Você deve utilizar alguma ferramenta para marcar o tempo, novamente a técnica recomenda usar algo simples como um timer de cozinha em formato de tomate por exemplo (<em>ok</em>, não precisa ser em formato de tomate). Mas você pode utilizar algum software para isso, eu tenho utilizado o <a href="http://www.pomodoro.me/"><em>Pomodoro.me</em></a> em minhas sessões.</p>

<p>Depois de escolhida a ferramenta, pegue uma tarefa da sua lista, marque 25 minutos no seu <em>timer</em> e trabalhe apenas nela (sem interrupções) durante esse tempo, quando chegar ao fim do <em>Pomodoro</em> marque a tarefa como concluída caso a tenha terminado, não se preocupe caso não tenha terminado em apenas um <em>Pomodoro</em>, você pode continuar a tarefa no próximo, mas tente dividir tarefas grandes em tarefas menores na próxima vez que for organizar sua lista.</p>

<p>Depois de trabalhar duro é hora de descansar seu cérebro, marque 5 minutos no <em>timer</em> e relaxe, você está livre para fazer qualquer coisa não relacionada a sua tarefa nesse tempo. Ao completar uma sessão de 4 <em>Pomodoros</em> de 25 minutos você pode tirar uma folga maior de 15 minutos antes de começar uma nova sessão.</p>

<h1>Só produtividade é pouco, eu quero mais</h1>

<p>Se você não ficou satisfeito apenas com a promessa de melhor produtividade e eficiência que o <em>Pomodoro</em> pode te beneficiar, saiba que como bônus você ainda pode ser tornar mais saudável.</p>

<p>Como? Basta que ao invés de ficar sentando acessando seu Facebook nos intervalos dos seus <em>Pomodoros</em>, você levante um pouco, vá até a cozinha pegar um café, faça algum alongamento, ficar sentando é uma dar piores posições para o ser humano. Acredite, não é da nossa natureza passar o dia sentado em frente a um computador.</p>

<p>Outro beneficio que o <em>Pomodoro</em> pode te trazer é o da satisfação e do bem estar consigo mesmo. A cada tarefa que você consegue finalizar o cérebro libera endorfina, produzindo uma sensação de calma e alegria em nosso corpo.</p>

<h1>That&rsquo;s it</h1>

<p>A técnica possui algumas outras “regras”, se você se interessou pode encontrar mais informações no site e no livro oficial do <a href="http://pomodorotechnique.com/"><em>Pomodoro Technique</em></a>. Os pontos que abordei são os mais importantes para mim e acredito que você não precise seguir tudo que está no livro oficial ao pé da letra, adapte a técnica para um jeito que vá funcionar para você, se você acha que consegue se manter focado por mais que 25 minutos, aumente o tempo dos seus <em>Pomodoros</em>, não fique preso a regras em um livro.</p>

<p>Experimente, talvez essa técnica não sirva para você, mas o ato de experimentar algo novo pode ser o suficiente para descobrir algo sobre você que te ajude melhorar.</p>

<p>Espero que este <em>post</em> possa ser útil de alguma maneira para vocês, fiquem a vontade para comentar sobre o <em>post</em> e sobre suas experiências com a técnica.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[But, Why? What Do I Have to Say?]]></title>
    <link href="http://www.marcelobalexandre.com/blog/2014/02/01/but-why-what-do-i-have-to-say/"/>
    <updated>2014-02-01T15:00:00-02:00</updated>
    <id>http://www.marcelobalexandre.com/blog/2014/02/01/but-why-what-do-i-have-to-say</id>
    <content type="html"><![CDATA[<p>Escrever um blog é algo que penso em fazer há algum tempo, mas sempre me preocupei em não ter algo para escrever ou não ter tempo para mantê-lo, e a ideia acabou sempre ficando em segundo plano.</p>

<p>Mas essa ideia voltou a tomar forma ao ler o post <a href="http://chadfowler.com/blog/2014/01/21/on-having-something-to-say/"><em>On Having Something to Say</em></a> escrito por <a href="https://twitter.com/chadfowler">Chad Fowler</a> em seu blog. Nele, Chad Fowler comenta sobre seus receios ao ser convidado para falar/escrever sobre suas experiências como programador (como na primeira vez em que foi convidado para palestrar em um evento ou quando foi convidado a escrever um livro sobre Ruby On Rails). Ocasiões em que ele se perguntava, <em>“But, why? What do I have to say? I&rsquo;m still learning, after all”</em>.</p>

<!--more-->


<p>Mesmo com suas dúvidas ele não deixou de aproveitar essas oportunidades para aprender e aperfeiçoar-se. E foi justamente este ponto que me motivou a colocar a ideia do blog em prática e aproveitar essa “oportunidade” para aprender e me aperfeiçoar.</p>

<p>Acredito que o compartilhamento de experiências (mesmo as experiências “erradas”) é uma ferramenta incrível para aprendermos coisas novas e/ou fixarmos o que já aprendemos. E como bônus podemos ajudar outras pessoas que estejam dispostas a aprender com nossas experiências.</p>

<p>Apesar de gostar de ler (principalmente sobre tecnologia e outros assuntos <em>nerds</em>) sempre tive dificuldades para escrever, e essa é uma das <em>skills</em> que espero melhorar através desse blog. Pois como tudo na vida, é a prática que nos leva à excelência.</p>

<p>Ainda não tenho muitas experiências profissionais como programador, mas espero poder compartilhar o que já sei e o que irei aprender através desse blog. Também não sei exatamente quais assuntos irei abordar ou com que frequência conseguirei atualiza-lo, mas gostaria que vocês aproveitassem o conteúdo que irei escrever e me dessem um <em>feedback</em> com suas opiniões.</p>

<p>Obrigado a vocês que leram até aqui, espero que voltem mais vezes! :)</p>
]]></content>
  </entry>
  
</feed>
